name: CI/CD

# Configuration for caching optimization
env:
  GO_VERSION: "1.24"
  CACHE_VERSION: v1

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Cache Go modules and build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/.cache/mage-loot
          ~/.cache/golangci-lint
        key: ${{ runner.os }}-go-${{ env.CACHE_VERSION }}-${{ hashFiles('**/go.sum', '**/go.work.sum', 'Depfile') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.CACHE_VERSION }}-
          ${{ runner.os }}-go-

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Install Go dependencies
      run: |
        go install mvdan.cc/gofumpt@v0.7.0
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.61.0

    - name: Run go vet
      run: mage quality:vet

    - name: Run linter
      run: mage quality:lint

  build:
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Cache Go modules and build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/.cache/mage-loot
          ~/.cache/golangci-lint
        key: ${{ runner.os }}-go-${{ env.CACHE_VERSION }}-${{ hashFiles('**/go.sum', '**/go.work.sum', 'Depfile') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.CACHE_VERSION }}-
          ${{ runner.os }}-go-

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Build
      run: mage build:binary

  release:
    runs-on: ubuntu-latest
    needs: [ lint, build ]
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Cache Go modules and build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/.cache/mage-loot
          ~/.cache/golangci-lint
        key: ${{ runner.os }}-go-${{ env.CACHE_VERSION }}-${{ hashFiles('**/go.sum', '**/go.work.sum', 'Depfile') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.CACHE_VERSION }}-
          ${{ runner.os }}-go-

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
